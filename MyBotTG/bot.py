import asyncio
import os
import logging
from aiogram import Bot, Dispatcher
from dotenv import load_dotenv, find_dotenv
from dabase.database import db_instance
from middleware.check_user import CheckUserMiddleware
from scheduler_jobs import start_scheduler
from startup import on_startup, on_shutdown

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logging.getLogger('aiohttp').setLevel(logging.DEBUG)  # –û—Ç–ª–∞–¥–∫–∞ –¥–ª—è aiohttp

# üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(find_dotenv())

# üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=os.getenv("BOT_TOKEN"))
dp = Dispatcher()

# ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º middleware
dp.update.middleware(CheckUserMiddleware())
dp.chat_member.middleware(CheckUserMiddleware())

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
from handlers.usershand.user_private import router
from handlers.cardshand.dobcards import dobcards_router
from handlers.cardshand.cardsall import cardsall_router
from handlers.cardshand.cardreceive import cardreceive_router
from handlers.usershand.referal import referal_router
from handlers.satefy.warn import warn_router
from handlers.satefy.mute import mute_router
from handlers.satefy.ban import ban_router
from handlers.satefy.event_users import event_router
from handlers.usershand.list_users import list_router
from kbds.cardspagination import cardspagination_router
from promo.promocode import promocode_router
from handlers.usershand.promocode_add import admin_router
from handlers.usershand.profil import profile_router
from cards.universe_choice import universechoice_router
from handlers.usershand.leaderboards import leaderboard_router
from handlers.usershand.dailyreward import dailyreward_router
from handlers.usershand.profile_callbacks import profile_callbacks_router
from cards.shop import shop_router
from cards.admin_pagination import admin_pagination_router
from cards.shop_callbacks import shop_callbacks_router
from cards.admincards import admincards_router
from handlers.usershand.admintoggleuniverse import admin_universe_router
from cards.admincardedit import admincardedit_router
from admin.universe_check import universecheck_router
from admin.adduniverse import adduniverse_router
from handlers.usershand.change_universe import change_universe_router

# ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(router)
dp.include_router(list_router)
dp.include_router(warn_router)
dp.include_router(mute_router)
dp.include_router(ban_router)
dp.include_router(event_router)
dp.include_router(dobcards_router)
dp.include_router(cardsall_router)
dp.include_router(cardreceive_router)
dp.include_router(cardspagination_router)
dp.include_router(admin_router)
dp.include_router(change_universe_router)
dp.include_router(universechoice_router)
dp.include_router(profile_router)
dp.include_router(leaderboard_router)
dp.include_router(promocode_router)
dp.include_router(dailyreward_router)
dp.include_router(profile_callbacks_router)
dp.include_router(shop_router)
dp.include_router(shop_callbacks_router)
dp.include_router(admin_universe_router)
dp.include_router(admincards_router)
dp.include_router(admin_pagination_router)
dp.include_router(admincardedit_router)
dp.include_router(universecheck_router)
dp.include_router(adduniverse_router)
dp.include_router(referal_router)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await on_startup(bot)

    # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ (—Å –ø–µ—Ä–µ–¥–∞—á–µ–π `bot`)
    start_scheduler(bot)

    # ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ webhook (–µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await asyncio.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞
    except Exception as e:
        logging.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}")

    try:
        await dp.start_polling(bot, allowed_updates=["message", "edited_message", "callback_query"])
    finally:
        await on_shutdown(bot)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    try:
        asyncio.run(main())  # ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ asyncio
    except KeyboardInterrupt:
        print("‚õî –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
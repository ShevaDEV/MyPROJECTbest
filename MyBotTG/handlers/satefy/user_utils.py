import logging
import asyncio
from aiogram import Bot
from aiogram.exceptions import TelegramAPIError
from dabase.database import db_instance  # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ë–î

logging.basicConfig(level=logging.INFO)


async def get_user_id_by_username(bot: Bot, chat_id: int, username: str) -> int | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç user_id –ø–æ username:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤ –±–∞–∑–µ (chat_users).
    2. –ò—â–µ—Ç —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á–µ—Ä–µ–∑ get_chat_member.
    """
    if not username:
        logging.warning("‚ö†Ô∏è –ü—É—Å—Ç–æ–π username –ø–µ—Ä–µ–¥–∞–Ω")
        return None

    username = username.strip().lstrip("@").lower()
    logging.info(f"üîç –ü–æ–∏—Å–∫ user_id –ø–æ username: {username} –≤ —á–∞—Ç–µ {chat_id}")

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –ë–î
    db = await db_instance.get_connection()
    try:
        async with db.execute(
            "SELECT user_id FROM chat_users WHERE chat_id = ? AND LOWER(username) = ?",
            (chat_id, username),
        ) as cursor:
            result = await cursor.fetchone()
        if result:
            logging.info(f"‚úÖ –ù–∞–π–¥–µ–Ω user_id –≤ –ë–î: {result[0]}")
            return result[0]
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –ë–î: {e}")
    finally:
        await db.close()

    # 2. –ò—â–µ–º —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    try:
        chat_admins = await bot.get_chat_administrators(chat_id)
        for admin in chat_admins:
            if admin.user.username and admin.user.username.lower() == username:
                logging.info(f"‚úÖ –ù–∞–π–¥–µ–Ω user_id —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–æ–≤: {admin.user.id}")
                return admin.user.id
        await asyncio.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞
    except TelegramAPIError as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å—Ä–µ–¥–∏ –∞–¥–º–∏–Ω–æ–≤: {e}")

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ get_chat_member
    try:
        chat_member = await bot.get_chat_member(chat_id, username)
        logging.info(f"‚úÖ –ù–∞–π–¥–µ–Ω user_id —á–µ—Ä–µ–∑ get_chat_member: {chat_member.user.id}")
        return chat_member.user.id
    except TelegramAPIError:
        logging.warning(f"‚ö†Ô∏è {username} –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ get_chat_member")
        await asyncio.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞

    logging.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ user_id –¥–ª—è {username}")
    return None


async def get_chat_members(bot: Bot, chat_id: int):
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –∏–∑ –ë–î –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å."""
    logging.info(f"üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —á–∞—Ç–∞ {chat_id}...")

    users = set()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º set –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏

    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ –ë–î
        db = await db_instance.get_connection()
        try:
            async with db.execute(
                "SELECT user_id, username FROM chat_users WHERE chat_id = ? AND left = 0",
                (chat_id,),
            ) as cursor:
                db_users = await cursor.fetchall()
            for row in db_users:
                user_id, username = row[0], row[1]
                username = f"@{username}" if username else "(–±–µ–∑ username)"
                users.add((user_id, username))
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –ë–î: {e}")
        finally:
            await db.close()

        # 2. –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        try:
            chat_admins = await bot.get_chat_administrators(chat_id)
            for admin in chat_admins:
                user_id = admin.user.id
                username = f"@{admin.user.username}" if admin.user.username else "(–±–µ–∑ username)"
                users.add((user_id, username))
                if admin.user.is_bot:
                    logging.info(f"ü§ñ –û–±–Ω–∞—Ä—É–∂–µ–Ω –±–æ—Ç-–∞–¥–º–∏–Ω: {user_id} (@{admin.user.username})")
            await asyncio.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞
        except TelegramAPIError as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–æ–≤: {e}")

        logging.info(f"üë• –ù–∞–π–¥–µ–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(users)}")

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

    return list(users)
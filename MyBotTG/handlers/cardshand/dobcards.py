from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from config import OWNER_ID, AVAILABLE_UNIVERSES
import sqlite3
import random

dobcards_router = Router()

# –î–∏–∞–ø–∞–∑–æ–Ω—ã –æ—á–∫–æ–≤ (–ø–æ–∏–Ω—Ç–æ–≤) –¥–ª—è —Ä–µ–¥–∫–æ—Å—Ç–µ–π
RARITY_POINTS = {
    "–æ–±—ã—á–Ω–∞—è": (50, 200),
    "—Ä–µ–¥–∫–∞—è": (350, 550),
    "—ç–ø–∏—á–µ—Å–∫–∞—è": (750, 1050),
    "–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è": (1350, 1850),
    "–º–∏—Ñ–∏—á–µ—Å–∫–∞—è": (2250, 2750),
}

# –î–∏–∞–ø–∞–∑–æ–Ω—ã –¥–ª—è –∞—Ç–∞–∫–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
RARITY_RANGES = {
    "–æ–±—ã—á–Ω–∞—è": {"attack": (10, 30), "hp": (20, 50)},
    "—Ä–µ–¥–∫–∞—è": {"attack": (30, 50), "hp": (50, 80)},
    "—ç–ø–∏—á–µ—Å–∫–∞—è": {"attack": (50, 80), "hp": (80, 120)},
    "–ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è": {"attack": (80, 120), "hp": (120, 180)},
    "–º–∏—Ñ–∏—á–µ—Å–∫–∞—è": {"attack": (120, 180), "hp": (180, 250)},
}

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
class AddCardState(StatesGroup):
    waiting_for_universe = State()
    waiting_for_photo = State()
    waiting_for_name = State()
    waiting_for_rarity = State()

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ–ª–µ–Ω–Ω–æ–π
def create_universe_keyboard() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ–ª–µ–Ω–Ω–æ–π."""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=universe.capitalize())] for universe in AVAILABLE_UNIVERSES] +
                 [[KeyboardButton(text="–û—Ç–º–µ–Ω–∞")]],
        resize_keyboard=True,
        one_time_keyboard=True,
    )

@dobcards_router.message(Command("addcard"))
@dobcards_router.message(F.text.lower() == "–¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É")
async def add_card(message: types.Message, state: FSMContext):
    if message.from_user.id != OWNER_ID:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ–ª–µ–Ω–Ω—É—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã:",
        reply_markup=create_universe_keyboard()
    )
    await state.set_state(AddCardState.waiting_for_universe)

@dobcards_router.message(AddCardState.waiting_for_universe)
async def card_universe_received(message: types.Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        await state.clear()
        return

    universe = message.text.lower()

    if universe not in AVAILABLE_UNIVERSES:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö:",
            reply_markup=create_universe_keyboard()
        )
        return

    await state.update_data(universe=universe)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∫–∞—Ä—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.", reply_markup=ReplyKeyboardRemove())
    await state.set_state(AddCardState.waiting_for_photo)

@dobcards_router.message(AddCardState.waiting_for_photo, F.photo)
async def card_photo_received(message: types.Message, state: FSMContext):
    photo_id = message.photo[-1].file_id
    await state.update_data(photo_id=photo_id)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã.")
    await state.set_state(AddCardState.waiting_for_name)

@dobcards_router.message(AddCardState.waiting_for_photo)
@dobcards_router.message(AddCardState.waiting_for_name)
@dobcards_router.message(AddCardState.waiting_for_rarity)
async def handle_cancel(message: types.Message, state: FSMContext):
    if message.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=ReplyKeyboardRemove())
        await state.clear()
        return

@dobcards_router.message(AddCardState.waiting_for_name)
async def card_name_received(message: types.Message, state: FSMContext):
    name = message.text
    await state.update_data(name=name)

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —Ä–µ–¥–∫–æ—Å—Ç—å –∫–∞—Ä—Ç—ã. –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:\n"
        "–æ–±—ã—á–Ω–∞—è, —Ä–µ–¥–∫–∞—è, —ç–ø–∏—á–µ—Å–∫–∞—è, –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è, –º–∏—Ñ–∏—á–µ—Å–∫–∞—è.",
        parse_mode="Markdown"
    )
    await state.set_state(AddCardState.waiting_for_rarity)

@dobcards_router.message(AddCardState.waiting_for_rarity)
async def card_rarity_received(message: types.Message, state: FSMContext):
    rarity = message.text.lower()

    if rarity not in RARITY_RANGES:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ä–µ–¥–∫–æ—Å—Ç–µ–π.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    card_data = await state.get_data()
    photo_id = card_data["photo_id"]
    name = card_data["name"]
    universe = card_data["universe"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
    conn = sqlite3.connect("bot_database.db")
    cursor = conn.cursor()
    cursor.execute(f"SELECT 1 FROM {universe} WHERE name = ?", (name,))
    if cursor.fetchone():
        await message.answer(f"–ö–∞—Ä—Ç–∞ —Å –∏–º–µ–Ω–µ–º '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –≤—Å–µ–ª–µ–Ω–Ω–æ–π '{universe.capitalize()}'.")
        conn.close()
        await state.clear()
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∫–∞—Ä—Ç—ã
    attack = random.randint(*RARITY_RANGES[rarity]["attack"])
    hp = random.randint(*RARITY_RANGES[rarity]["hp"])

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∏–Ω—Ç–æ–≤ —Å –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º 00 –∏–ª–∏ 50
    points_range = range(RARITY_POINTS[rarity][0], RARITY_POINTS[rarity][1] + 1, 50)
    points = random.choice(points_range)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute(f"""
    INSERT INTO {universe} (name, photo_id, rarity, attack, hp, points)
    VALUES (?, ?, ?, ?, ?, ?)
    """, (name, photo_id, rarity, attack, hp, points))
    conn.commit()
    conn.close()

    await message.answer(
        f"–ö–∞—Ä—Ç–∞ '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É '{universe.capitalize()}'!\n\n"
        f"üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n"
        f"üé≤ –†–µ–¥–∫–æ—Å—Ç—å: {rarity.capitalize()}\n"
        f"‚öîÔ∏è –ê—Ç–∞–∫–∞: {attack}\n"
        f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {hp}\n"
        f"üéñÔ∏è –û—á–∫–∏: {points} points",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.clear()

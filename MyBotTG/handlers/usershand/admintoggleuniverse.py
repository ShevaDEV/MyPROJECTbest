from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import aiosqlite
from config import OWNER_ID

admin_universe_router = Router()

@admin_universe_router.message(Command("toggle_universe"))
async def toggle_universe(message: types.Message):
    """–í—ã–±–æ—Ä –≤—Å–µ–ª–µ–Ω–Ω–æ–π –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è"""
    if message.from_user.id != OWNER_ID:
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # üîπ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö
    async with aiosqlite.connect("bot_database.db") as db:
        cursor = await db.execute("SELECT name, enabled FROM universes")
        universes = await cursor.fetchall()

    if not universes:
        await message.answer("üìÇ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö.")
        return

    # üéõ –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=f"{name.capitalize()} - {'‚úÖ –í–∫–ª—é—á–µ–Ω–∞' if enabled else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞'}",
            callback_data=f"toggle:{name}:{1 if enabled == 0 else 0}"
        )]
        for name, enabled in universes
    ])

    await message.answer("üîß –í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ–ª–µ–Ω–Ω—É—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è:", reply_markup=keyboard)

@admin_universe_router.callback_query(lambda c: c.data.startswith("toggle"))
async def toggle_universe_callback(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ–ª–µ–Ω–Ω–æ–π"""
    _, universe, new_state = callback.data.split(":")
    new_state = int(new_state)

    async with aiosqlite.connect("bot_database.db") as db:
        await db.execute("UPDATE universes SET enabled = ? WHERE name = ?", (new_state, universe))
        await db.commit()

    status = "‚úÖ –≤–∫–ª—é—á–µ–Ω–∞" if new_state else "‚ùå –æ—Ç–∫–ª—é—á–µ–Ω–∞"
    await callback.message.edit_text(f"üåå *–í—Å–µ–ª–µ–Ω–Ω–∞—è* `{universe.capitalize()}` *—Ç–µ–ø–µ—Ä—å {status}*.", parse_mode="Markdown")
    await callback.answer("–°—Ç–∞—Ç—É—Å –≤—Å–µ–ª–µ–Ω–Ω–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω.")

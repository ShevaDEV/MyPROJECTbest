import sqlite3
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

change_universe_router = Router()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –§–°–ú
class ChangeUniverseState(StatesGroup):
    waiting_for_universe = State()

def get_available_universes():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    conn = sqlite3.connect("bot_database.db")
    cursor = conn.cursor()
    cursor.execute("SELECT universe_id, name FROM universes WHERE enabled = 1")
    universes = cursor.fetchall()
    conn.close()
    return {name: universe_id for universe_id, name in universes}

async def reset_user_universe(user_id: int):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—á–∫–∏."""
    conn = sqlite3.connect("bot_database.db")
    cursor = conn.cursor()

    # –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("DELETE FROM user_cards WHERE user_id = ?", (user_id,))
    cursor.execute("UPDATE users SET selected_universe = NULL WHERE user_id = ?", (user_id,))
    
    conn.commit()
    conn.close()

async def start_universe_change(callback: types.CallbackQuery):
    """–ó–∞–ø—É—Å–∫ —Å–º–µ–Ω—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π —á–µ—Ä–µ–∑ –§–°–ú."""
    user_id = callback.from_user.id

    available_universes = get_available_universes()
    if not available_universes:
        await callback.message.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—Å–µ–ª–µ–Ω–Ω—ã—Ö –¥–ª—è –≤—ã–±–æ—Ä–∞.")
        return

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=name, callback_data=f"universe_{uid}")] for name, uid in available_universes.items()]
    )

    await callback.message.answer("üåå –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é:", reply_markup=keyboard)
    await callback.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await callback.bot.get_fsm().set_state(user_id, ChangeUniverseState.waiting_for_universe)

@change_universe_router.callback_query(F.data.startswith("universe_"))
async def process_universe_selection(callback: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–æ–≤–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π."""
    user_id = callback.from_user.id
    new_universe_id = callback.data.split("_")[1]

    await reset_user_universe(user_id)

    conn = sqlite3.connect("bot_database.db")
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET selected_universe = ? WHERE user_id = ?", (new_universe_id, user_id))
    conn.commit()
    conn.close()

    await callback.message.answer(f"üéâ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é –Ω–∞ –Ω–æ–≤—É—é!")
    await callback.answer()
    await state.clear()

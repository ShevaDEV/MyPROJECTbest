from aiogram import Router, types, F
from aiogram.filters import Command
import sqlite3
from kbds.inlinecards import rarity_keyboard_for_user
from promo.promocode import promocode_keyboard  # –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤

profile_router = Router()

def profile_keyboard() -> types.InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è."""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üéÅ –ü—Ä–æ–º–æ–∫–æ–¥", callback_data="use_promocode")],
        [types.InlineKeyboardButton(text="üìã –ú–æ–∏ –∫–∞—Ä—Ç—ã", callback_data="view_cards")]
    ])

@profile_router.message(Command("profile"))
@profile_router.message(F.text.lower() == "–ø—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = message.from_user.id

    conn = sqlite3.connect("bot_database.db")
    cursor = conn.cursor()

    # –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT total_points, spins, selected_universe FROM users WHERE user_id = ?", (user_id,))
    user_data = cursor.fetchone()

    if not user_data:
        await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")
        conn.close()
        return

    total_points, spins, selected_universe = user_data
    spins = spins if spins else 0

    if not selected_universe:
        await message.answer(
            "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /selectuniverse, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é."
        )
        conn.close()
        return

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("""
        SELECT COUNT(DISTINCT card_id)
        FROM user_cards
        WHERE user_id = ?
    """, (user_id,))
    user_cards_count = cursor.fetchone()[0] or 0

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç –≤–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π
    cursor.execute(f"SELECT COUNT(*) FROM [{selected_universe}]")
    total_universe_cards = cursor.fetchone()[0] or 0

    conn.close()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
    profile_text = (
        f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"üåå –í—ã–±—Ä–∞–Ω–Ω–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è: {selected_universe.capitalize()}\n"
        f"üéñÔ∏è –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤: {total_points}\n"
        f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Ä—É—Ç–æ–∫: {spins}\n"
        f"üìã –ö–∞—Ä—Ç: {user_cards_count} –∏–∑ {total_universe_cards}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üéÅ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ üìã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –∫–∞—Ä—Ç—ã!"
    )

    await message.answer(profile_text, reply_markup=profile_keyboard())

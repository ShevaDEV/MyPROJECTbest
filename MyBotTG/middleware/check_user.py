import sqlite3
from aiogram import types, Router, Bot
from aiogram.dispatcher.middlewares.base import BaseMiddleware
from aiogram.exceptions import TelegramAPIError
from cards.universe_choice import select_universe
from handlers.usershand.referal import check_referral_validity  # ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º
from config import CHANNEL_ID

class CheckUserMiddleware(BaseMiddleware):
    async def __call__(self, handler, event: types.Update, data: dict):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."""
        bot: Bot = data["bot"]  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
        message = event.message if isinstance(event.message, types.Message) else None

        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        if not message or not message.from_user:
            return await handler(event, data)

        user_id = message.from_user.id

        conn = sqlite3.connect("bot_database.db")
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute("SELECT user_id, is_blacklisted, selected_universe FROM users WHERE user_id = ?", (user_id,))
        user_data = cursor.fetchone()

        if user_data:
            if user_data[1]:  # –ï—Å–ª–∏ –≤ –±–∞–Ω–µ
                await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É.")
                return False  

            # –ï—Å–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω–∞—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å
            if not user_data[2]:
                await select_universe(message)
                return False  

            return await handler(event, data)  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω ‚Üí –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É

        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        referrer_id = None
        if message.text and message.text.startswith("/start "):
            parts = message.text.split()
            if len(parts) > 1 and parts[1].isdigit():  
                referrer_id = int(parts[1])

        cursor.execute("""
            INSERT INTO users (user_id, username, registration_date)
            VALUES (?, ?, datetime('now'))
        """, (user_id, message.from_user.username))
        conn.commit()

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ‚Üí –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        if referrer_id:
            await check_referral_validity(user_id, bot)  # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ

        conn.close()

        # –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ä–∞–∑—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ–ª–µ–Ω–Ω—É—é
        await select_universe(message)
        return False  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–æ–∫–∞ –Ω–µ –≤—ã–±–µ—Ä–µ—Ç –≤—Å–µ–ª–µ–Ω–Ω—É—é

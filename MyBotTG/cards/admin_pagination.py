from aiogram import Router, types
from handlers.cardshand.callbackcards import AdminPaginationCallback
from kbds.inlinecards import admin_pagination_keyboard, edit_card_keyboard
from aiogram.fsm.context import FSMContext

admin_pagination_router = Router()

@admin_pagination_router.callback_query(AdminPaginationCallback.filter())
async def paginate_admin_cards(callback: types.CallbackQuery, callback_data: AdminPaginationCallback, state: FSMContext):
    rarity_type = callback_data.rarity_type
    index = callback_data.index

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏–∑ FSMContext
    data = await state.get_data()
    cards = data.get("admin_cards")
    universe = data.get("universe")

    if not cards or not universe:
        await callback.answer("–î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", show_alert=True)
        return

    # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å
    index = index % len(cards)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ä—Ç—ã
    card_id, name, photo_id, rarity, attack, hp, points = cards[index]

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
    caption = (
        f"üÜî ID: {card_id}\n"
        f"üè∑Ô∏è –ò–º—è: {name}\n"
        f"üé≤ –†–µ–¥–∫–æ—Å—Ç—å: {rarity.capitalize()}\n"
        f"‚öîÔ∏è –ê—Ç–∞–∫–∞: {attack}\n"
        f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {hp}\n"
        f"üíé –û—á–∫–∏: {points}\n"
    )

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    pagination_markup = admin_pagination_keyboard(rarity=rarity_type, index=index, total=len(cards))

    # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    edit_kb = edit_card_keyboard(card_id=card_id, universe=universe)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ–π
    try:
        await callback.message.edit_media(
            media=types.InputMediaPhoto(media=photo_id, caption=caption),
            reply_markup=pagination_markup
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ
        await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –∫–∞—Ä—Ç—ã:", reply_markup=edit_kb)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç.", show_alert=True)

    await callback.answer()
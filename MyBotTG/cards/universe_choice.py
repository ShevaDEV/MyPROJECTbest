from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import aiosqlite

AVAILABLE_UNIVERSES = ["marvel", "star_wars", "dc"]

universechoice_router = Router()


async def get_user_universe(user_id: int) -> str | None:
    """–ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    async with aiosqlite.connect("bot_database.db") as db:
        async with db.execute("SELECT selected_universe FROM users WHERE user_id = ?", (user_id,)) as cursor:
            result = await cursor.fetchone()
    return result[0] if result else None


async def set_user_universe(user_id: int, universe: str):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    async with aiosqlite.connect("bot_database.db") as db:
        await db.execute("UPDATE users SET selected_universe = ? WHERE user_id = ?", (universe, user_id))
        await db.commit()


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ–ª–µ–Ω–Ω–æ–π
@universechoice_router.message(Command("select_universe"))
@universechoice_router.message(F.text.lower() == "–≤—ã–±—Ä–∞—Ç—å –≤—Å–µ–ª–µ–Ω–Ω—É—é")
async def select_universe(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤—Å–µ–ª–µ–Ω–Ω—É—é
    current_universe = await get_user_universe(user_id)
    if current_universe:
        await message.answer(
            f"‚úÖ –í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é *{current_universe.capitalize()}*.",
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove(),
        )
        return

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –≤—Å–µ–ª–µ–Ω–Ω–æ–π
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=universe.capitalize())] for universe in AVAILABLE_UNIVERSES],
        resize_keyboard=True,
    )

    await message.answer("üåå *–í—ã–±–µ—Ä–∏—Ç–µ –≤—Å–µ–ª–µ–Ω–Ω—É—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∫–∞—Ä—Ç—ã:*", parse_mode="Markdown", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤—Å–µ–ª–µ–Ω–Ω–æ–π
@universechoice_router.message(F.text.lower().in_([u.lower() for u in AVAILABLE_UNIVERSES]))
async def universe_chosen(message: types.Message):
    user_id = message.from_user.id
    chosen_universe = message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω–∞—è —É–∂–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞
    current_universe = await get_user_universe(user_id)
    if current_universe == chosen_universe:
        await message.answer(
            f"‚úÖ –í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é *{chosen_universe.capitalize()}*.",
            parse_mode="Markdown",
            reply_markup=ReplyKeyboardRemove(),
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤—Å–µ–ª–µ–Ω–Ω–æ–π
    await set_user_universe(user_id, chosen_universe)

    await message.answer(
        f"üåü –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é *{chosen_universe.capitalize()}*.",
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardRemove(),
    )
